{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","dialogs_button","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","newMessageBody","isAuth","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,eAAiB,kC,+FCW9OC,EARI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAWC,IAAEC,OAAS,GAAKD,IAAEE,QAC9B,kBAAC,IAAD,CAASC,GAAIN,GAAb,IAAqBD,EAAMQ,KAA3B,OCmBGC,EAvBC,SAACT,GAYb,OAAO,6BACH,yBAAKG,UAAWC,IAAEC,QAASL,EAAMU,W,yCCqBnCC,EAAcC,YAAiB,IAc/BC,EAAuBC,YAAU,CAACC,KAAM,wBAAjBD,EAZN,SAACd,GACpB,OACI,0BAAMgB,SAAUhB,EAAMiB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAaC,IAAWC,SAAU,CAACC,IAAUX,GAC7CH,KAAM,iBAAkBe,YAAc,yBAEjD,yBAAKpB,UAAWC,IAAEoB,gBAAlB,IAAmC,kDAAnC,SAMGC,EA3CC,SAACzB,GAEb,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYvB,KAAMuB,EAAEvB,KAAMwB,IAAKD,EAAE7B,GAAIA,GAAI6B,EAAE7B,QACpF+B,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASzB,QAASyB,EAAEzB,QAASsB,IAAKG,EAAEjC,QAC9DwB,EAAMU,eAO3B,OAAKpC,EAAMqC,OAGP,yBAAKlC,UAAWC,IAAEyB,SACd,yBAAK1B,UAAWC,IAAEkC,cACbV,GAEL,yBAAKzB,UAAWC,IAAE8B,UACd,6BAAMD,IAEV,kBAACpB,EAAD,CAAqBG,SAdT,SAACuB,GACjBvC,EAAMwC,YAAYD,EAAOH,oBAGH,kBAAC,IAAD,CAAU7B,GAAG,Y,gDCnBvCkC,EAA6B,SAACf,GAAD,MAAY,CACrCW,OAAQX,EAAMgB,KAAKL,S,OCiBZM,sBACXC,aAfkB,SAAClB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACkB,GACtB,MAAO,CACHL,YAAa,SAACJ,GACVS,EAASC,YAAmBV,UDTR,SAACW,GAAe,IACtCC,EADqC,iLAGnC,OAAKC,KAAKjD,MAAMqC,OACT,kBAACU,EAAcE,KAAKjD,OADI,kBAAC,IAAD,CAAUO,GAAG,eAHT,GACX2C,IAAMH,WAOtC,OADqCH,YAAQH,EAARG,CAAoCI,KCO9DL,CAIdlB","file":"static/js/4.482a1678.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1Tkla\",\"dialogsItems\":\"Dialogs_dialogsItems__1jsZy\",\"active\":\"Dialogs_active__1KemY\",\"dialog\":\"Dialogs_dialog__2PwHV\",\"messages\":\"Dialogs_messages__1Eie5\",\"message\":\"Dialogs_message__3Qj0s\",\"dialogs_button\":\"Dialogs_dialogs_button__2svQI\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog + '' + s.active}>\r\n            <NavLink to={path}> {props.name} </NavLink>\r\n        </div>\r\n    )\r\n};\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n/*\r\n    let newMessageElement = React.createRef();\r\n\r\n    let addMessage = () => {\r\n        let text = newMessageElement.current.value;\r\n        alert (text);\r\n    };\r\n*/\r\n\r\n\r\n    return <div>\r\n        <div className={s.dialog}>{props.message}</div>\r\n{/*        <div>\r\n            <textarea ref={newMessageElement}> simple text </textarea>\r\n        </div>\r\n        <div>\r\n            <button onClick={ addMessage }>Send Message</button>\r\n        </div>*/}\r\n    </div>\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators\";\r\nimport {Textarea} from \"../common/formsControl/formsControls\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    };\r\n\r\n    if (!props.isAuth) return <Redirect to='/login'/>;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit = {addNewMessage}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component = {Textarea}  validate={[required, maxLength50]}\r\n                       name={'newMessageBody'} placeholder = 'Enter your message ' />\r\n            </div>\r\n            <div className={s.dialogs_button}> <button>Send a message</button> </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageFormRedux  = reduxForm({form: 'dialogAddMessageForm'}) (AddMessageForm);\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    });\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\"/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n};\r\n\r\n","import React from 'react';\r\nimport {sendMessageCreator} from \"../../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)\r\n(Dialogs)"],"sourceRoot":""}