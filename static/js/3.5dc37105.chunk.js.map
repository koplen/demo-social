{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","className","s","profile_photo","src","descriptionBlock","photos","large","Post","item","item_post","message","item_span","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPosts","React","memo","postsElements","posts","map","p","reverse","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.5dc37105.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2owU-\",\"profile_photo\":\"ProfileInfo_profile_photo__3dz27\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__jyaXU\",\"posts\":\"MyPosts_posts__1WmN8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2wWlN\",\"item_post\":\"Post_item_post__17q9V\",\"item_span\":\"Post_item_span__3tAEz\"};","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n    const  onStatusChange = (e) => {\r\n       setStatus(e.currentTarget.value)\r\n    };\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"-------\"} </span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input  autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange}\r\n                        value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/preloader\";\r\nimport ProfileStatusWithHooks from \"../ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, updateStatus, status}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.profile_photo}>\r\n                <img src='https://images-na.ssl-images-amazon.com/images/I/81VStYnDGrL.jpg'/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large}/>\r\n                <ProfileStatusWithHooks updateStatus={updateStatus} status={status}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://cdn3.iconfinder.com/data/icons/social-media-set-1-1/256/Social_Media-11-512.png'/>\r\n       <div className={s.item_post}> { props.message }\r\n            <div className={s.item_span}>\r\n                <span>like</span>\r\n                {props.likesCount }\r\n            </div>\r\n       </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\r\nimport {Textarea} from \"../../common/formsControl/formsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'newPostText'} component={Textarea} placeholder={'Post Message'}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\nconst AddNewPostFormRedux = reduxForm({form:'ProfileAddNewPostForm'})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        [...props.posts]\r\n            .map(p => <Post message={p.message} likesCount={p.likesCount}/>).reverse();\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit = {onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n           dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n};\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile = {props.profile} status = {props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n\r\n};\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../Redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n    //,withAuthRedirect\r\n)\r\n(ProfileContainer)"],"sourceRoot":""}