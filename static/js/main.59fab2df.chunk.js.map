{"version":3,"sources":["components/Navbar/Navbar.module.css","Redux/dialogs-reducer.js","assets/images/user.png","assets/images/preloader.gif","API/api.js","components/Users/Users.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","components/News/news.jsx","components/Music/music.jsx","components/Settings/settings.jsx","utils/object-helpers.js","Redux/users-reducer.js","components/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","Redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","Redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/login.jsx","Redux/app-reducer.js","Redux/sidebar-reducer.js","Redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/formsControl/formsControls.js","components/common/formsControl/formsControls.module.css","components/common/Preloader/preloader.js","components/Paginator/Paginator.module.css","utils/validators.js","components/Header/Header.module.css","Redux/profile-reducer.js"],"names":["module","exports","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","log","s","Navbar","className","nav","item","to","activeClassName","active","News","Music","Settings","updateObjectInArray","items","itemID","objPropName","newObjectProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","content_block","content_flex","src","photos","small","userPhoto","follow_button","disabled","some","content_user_name","content_location","Users","props","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","React","Component","compose","connect","bind","page","totalCount","Header","header","loginBlock","isAuth","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","formSummaryError","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","app","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","next","result","getState","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","exact","AppContainer","withRouter","SamuraiJsApp","basename","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","validators","component","text","validate","Preloader","width","alt","preloader","value","maxLengthCreator","maxLength","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,OAAS,yB,sFCC7EC,EAAe,CACfC,QAAS,CACL,CAACC,GAAI,EAAGC,KAAM,WACd,CAACD,GAAI,EAAGC,KAAM,WACd,CAACD,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,WACd,CAACD,GAAI,EAAGC,KAAM,aAGlBC,SAAU,CACN,CAACF,GAAI,EAAGG,QAAS,OACjB,CAACH,GAAI,EAAGG,QAAS,iBACjB,CAACH,GAAI,EAAGG,QAAS,WACjB,CAACH,GAAI,EAAGG,QAAS,WACjB,CAACH,GAAI,EAAGG,QAAS,aAiBZC,EAAqB,SAACC,GAAD,MAAqB,CAACC,KAlCnC,eAkCuDD,mBAE7DE,IAfQ,WAAmC,IAAlCC,EAAiC,uDAAzBV,EAAcW,EAAW,uCACrD,OAAQA,EAAOH,MACX,IAvBa,eAwBT,IAAII,EAAOD,EAAOJ,eAClB,OAAO,eACAG,EADP,CAEIN,SAAS,GAAD,mBAAMM,EAAMN,UAAZ,CAAsB,CAACF,GAAI,EAAGG,QAASO,OAEvD,QACI,OAAOF,K,oBC9BnBZ,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,gCCA3C,mHAGMc,EAAWC,SAAa,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UAAW,0CAINC,EAAW,CACpBC,SADoB,WACsB,IAAjCC,EAAgC,uDAAlB,EAAGC,EAAe,uDAAJ,GACjC,OAAOR,EAASS,IAAT,qBAA2BF,EAA3B,kBAAgDC,IAClDE,MAAK,SAAAC,GACF,OAAOA,EAASC,SAG5BC,OAPoB,SAObC,GACH,OAAOd,EAASe,KAAT,iBAAwBD,KAEnCE,SAVoB,SAUXF,GACL,OAAOd,EAASiB,OAAT,iBAA0BH,KAErCI,WAboB,SAaTJ,GAEP,OADAK,QAAQC,KAAK,8CACNC,EAAWH,WAAWJ,KAGxBO,EAAa,CACtBH,WADsB,SACXJ,GACP,OAAOd,EAASS,IAAI,WAAaK,IAErCQ,UAJsB,SAIZR,GACN,OAAOd,EAASS,IAAI,kBAAoBK,IAE5CS,aAPsB,SAOTC,GACT,OAAOxB,EAASyB,IAAI,kBAAmB,CAACD,OAAQA,MAM3CE,EAAU,CACnBC,GADmB,WAEf,OAAO3B,EAASS,IAAT,aAEXmB,MAJmB,SAIbC,EAAOC,GAA+B,IAArBC,EAAoB,wDACvC,OAAO/B,EAASe,KAAT,cAA6B,CAACc,QAAOC,WAAUC,gBAE1DC,OAPmB,WAQf,OAAOhC,EAASiB,OAAT,kB,uKClDfhC,EAAOC,QAAU,CAAC,aAAe,4BAA4B,UAAY,yBAAyB,aAAe,4BAA4B,cAAgB,6BAA6B,aAAe,4BAA4B,cAAgB,6BAA6B,kBAAoB,iCAAiC,iBAAmB,kC,mECWtU+C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,+FCfNlB,QAAQmB,IAAIC,KAEZ,IAuBeC,EAvBA,WACX,OAAO,yBAAKC,UAAWF,IAAEG,KACrB,yBAAKD,UAAWF,IAAEI,MACd,kBAAC,IAAD,CAAUC,GAAI,WAAWC,gBAAiBN,IAAEO,QAA5C,YAEJ,yBAAKL,UAAS,UAAKF,IAAEI,KAAP,YAAeJ,IAAEO,SAC3B,kBAAC,IAAD,CAASF,GAAI,WAAWC,gBAAiBN,IAAEO,QAA3C,aAEJ,yBAAKL,UAAS,UAAKF,IAAEI,KAAP,YAAeJ,IAAEO,SAC3B,kBAAC,IAAD,CAASF,GAAI,SAASC,gBAAiBN,IAAEO,QAAzC,UAEJ,yBAAKL,UAAWF,IAAEI,MACd,kBAAC,IAAD,CAASC,GAAI,QAAQC,gBAAiBN,IAAEO,QAAxC,SAEJ,yBAAKL,UAAWF,IAAEI,MACd,kBAAC,IAAD,CAASC,GAAI,YAAYC,gBAAiBN,IAAEO,QAA5C,aAEJ,yBAAKL,UAAWF,IAAEI,MACd,kBAAC,IAAD,CAASC,GAAI,SAASC,gBAAiBN,IAAEO,QAAzC,YCZGC,G,OARF,WACT,OACI,uCCMOC,G,OARD,WACV,OACI,wCCMOC,G,OARE,WACb,OACI,2C,+DCLKC,EAAsB,SAACC,EAAOC,EAAQC,EAAaC,GAC7D,OAAQH,EAAMI,KAAI,SAAAC,GACb,OAAIA,EAAEH,KAAiBD,EACZ,eAAII,EAAX,GAAiBF,GAEdE,MCMXrE,EAAe,CACfsE,MAAO,GACPjD,SAAU,GACVkD,gBAAiB,EACjBnD,YAAa,EACboD,YAAY,EACZC,oBAAqB,IAyCZC,EAAgB,SAAC/C,GAAD,MAAa,CAACnB,KAvD5B,SAuD0CmB,WAC5CgD,EAAkB,SAAChD,GAAD,MAAa,CAACnB,KAvD5B,WAuD4CmB,WAEhDiD,EAAiB,SAACxD,GAAD,MAAkB,CAACZ,KAvDxB,mBAuDgDY,gBAE5DyD,EAAmB,SAACL,GAAD,MAAiB,CAAChE,KAvDvB,qBAuDiDgE,eAC/DM,EAA0B,SAACN,EAAY7C,GAAb,MAAyB,CAC5DnB,KAxDiC,+BAyDjCgE,aACA7C,WAeEoD,EAAkB,uCAAG,WAAMC,EAAUrD,EAAQsD,EAAWC,GAAnC,SAAAC,EAAA,6DACnBH,EAASF,GAAwB,EAAMnD,IADpB,SAEEsD,EAAUtD,GAFZ,OAGc,IAHd,OAGNF,KAAK2D,YACdJ,EAASE,EAAcvD,IAE3BqD,EAASF,GAAwB,EAAOnD,IANrB,2CAAH,4DAqBT0D,EAnFM,WAAmC,IAAlC3E,EAAiC,uDAAzBV,EAAcW,EAAW,uCACnD,OAAQA,EAAOH,MACX,IAnBO,SAoBH,OAAO,eACAE,EADP,CAES4D,MAAOP,EAAqBrD,EAAM4D,MAAO3D,EAAOgB,OAAQ,KAAM,CAAC2D,UAAU,MAEtF,IAvBS,WAwBL,OAAO,eACA5E,EADP,CAEI4D,MAAOP,EAAqBrD,EAAM4D,MAAO3D,EAAOgB,OAAQ,KAAM,CAAC2D,UAAU,MAEjF,IA3BU,YA4BN,OAAO,eAAI5E,EAAX,CAAkB4D,MAAO3D,EAAO2D,QAEpC,IA5BsB,wBA6BlB,OAAO,eAAI5D,EAAX,CAAkB6D,gBAAiB5D,EAAO4E,QAG9C,IAjCiB,mBAkCb,OAAO,eAAI7E,EAAX,CAAkBU,YAAaT,EAAOS,cAE1C,IAlCmB,qBAmCf,OAAO,eAAIV,EAAX,CAAkB8D,WAAY7D,EAAO6D,aAEzC,IApC6B,+BAqCzB,OAAO,eACA9D,EADP,CAEI+D,oBAAqB9D,EAAO6D,WAAP,sBACX9D,EAAM+D,qBADK,CACgB9D,EAAOgB,SACtCjB,EAAM+D,oBAAoBe,QAAO,SAAAtF,GAAE,OAAIA,IAAOS,EAAOgB,YAGnE,QACI,OAAOjB,I,4DCrBJ+E,EA7BC,SAAC,GAGb,IAH4F,IAA9EC,EAA6E,EAA7EA,gBAAiBrE,EAA4D,EAA5DA,SAAUD,EAAkD,EAAlDA,YAAauE,EAAqC,EAArCA,cAAqC,IAAtBC,mBAAsB,MAAR,GAAQ,EACvFC,EAAaC,KAAKC,KAAKL,EAAkBrE,GACzC2E,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAEf,IAAIE,EAAeL,KAAKC,KAAKF,EAAaD,GANiD,EAOnDQ,mBAAS,GAP0C,mBAOtFC,EAPsF,KAOvEC,EAPuE,KAQvFC,GAAyBF,EAAgB,GAAKT,EAAc,EAC5DY,EAAyBH,EAAgBT,EAE7C,OAAO,yBAAKtC,UAAWmD,IAAOC,WACzBL,EAAgB,GAAM,4BAAQM,QAAS,WAAQL,EAAiBD,EAAgB,KAA1D,cACtBL,EACIR,QAAO,SAAAoB,GAAC,OAAIA,GAAKL,GAAyBK,GAAGJ,KAC7CpC,KAAI,SAACwC,GACF,OAAO,0BAAMtD,UAAYuD,IAAG,eACvBJ,IAAOK,aAAe1F,IAAgBwF,GACxCH,IAAOM,YACGC,IAAKJ,EACLD,QAAS,SAACM,GACNtB,EAAciB,KACdA,MAExBT,EAAeE,GAAiB,4BAAQM,QAAS,WAAOL,EAAiBD,EAAgB,KAAzD,Y,mCCqB1Ba,EA3CJ,SAAC,GAAmD,IAAlDC,EAAiD,EAAjDA,KAAM1C,EAA2C,EAA3CA,oBAAqB5C,EAAsB,EAAtBA,SAAUH,EAAY,EAAZA,OAC9C,OACI,yBAAK4B,UAAWmD,IAAOW,eACnB,yBAAK9D,UAAWmD,IAAOY,cACX,8BACI,6BACI,kBAAC,IAAD,CAAS5D,GAAI,YAAc0D,EAAKjH,IAChC,yBAAKoH,IAA0B,MAArBH,EAAKI,OAAOC,MAAgBL,EAAKI,OAAOC,MAAQC,IACrDnE,UAAWmD,IAAOgB,cAG1B,yBAAKnE,UAAWmD,IAAOiB,eAClBP,EAAK7B,SACA,4BAAQqC,SAAUlD,EACfmD,MAAK,SAAA1H,GAAE,OAAIA,IAAOiH,EAAKjH,MAClByG,QAAS,WACL9E,EAASsF,EAAKjH,MAH1B,aAMA,4BAAQyH,SAAUlD,EAAoBmD,MAAK,SAAA1H,GAAE,OAAIA,IAAOiH,EAAKjH,MACrDyG,QAAS,WACLjF,EAAOyF,EAAKjH,MAFxB,aAOf,8BACI,8BACI,yBAAKoD,UAAWmD,IAAOoB,mBAAoBV,EAAKhH,MAChD,yBAAKmD,UAAWmD,IAAOoB,mBAAoBV,EAAK9E,SAEpD,8BACI,yBAAKiB,UAAWmD,IAAOqB,kBACnB,6BAAM,sBACN,6BAAM,yBCjB3BC,EAlBH,SAAC,GAA4F,IAA3F3G,EAA0F,EAA1FA,YAAamD,EAA6E,EAA7EA,gBAAiBlD,EAA4D,EAA5DA,SAAwBsE,GAAoC,EAAlDmB,aAAkD,EAApCnB,eAAerB,EAAqB,EAArBA,MAAU0D,EAAW,mGACpG,OAAO,6BACH,kBAAC,EAAD,CAAW5G,YAAaA,EAAauE,cAAeA,EACzCD,gBAAiBnB,EAAiBlD,SAAUA,IACvD,6BAEQiD,EAAMF,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAM8C,KAAM9C,EACNI,oBAAqBuD,EAAMvD,oBAC3BuC,IAAK3C,EAAEnE,GACP2B,SAAUmG,EAAMnG,SAChBH,OAAQsG,EAAMtG,e,eCftCP,EAAW,SAACT,GACrB,OAAOA,EAAMuH,UAAU3D,OAEd4D,EAAc,SAACxH,GACxB,OAAOA,EAAMuH,UAAU5G,UAEd8G,GAAqB,SAACzH,GAC/B,OAAOA,EAAMuH,UAAU1D,iBAEd6D,GAAiB,SAAC1H,GAC3B,OAAOA,EAAMuH,UAAU7G,aAEdiH,GAAgB,SAAC3H,GAC1B,OAAOA,EAAMuH,UAAUzD,YAEd8D,GAAyB,SAAC5H,GACnC,OAAOA,EAAMuH,UAAUxD,qBCGrB8D,G,2MAMF5C,cAAgB,SAACoB,GAAgB,IACtB1F,EAAa,EAAK2G,MAAlB3G,SACP,EAAK2G,MAAM7G,SAAS4F,EAAW1F,I,mFAPd,IAAD,EACgBmH,KAAKR,MAA9B5G,EADS,EACTA,YAAYC,EADH,EACGA,SACnBmH,KAAKR,MAAM7G,SAASC,EAAaC,K,+BASjC,OAAO,oCACFmH,KAAKR,MAAMxD,YAAc,kBAAE,IAAF,MAC1B,kBAAC,EAAD,CAAOD,gBAAiBiE,KAAKR,MAAMzD,gBAC5BlD,SAAUmH,KAAKR,MAAM3G,SACrBD,YAAaoH,KAAKR,MAAM5G,YACxBuE,cAAe6C,KAAK7C,cACpBrB,MAAOkE,KAAKR,MAAM1D,MAClB5C,OAAQ8G,KAAKR,MAAMtG,OACnBG,SAAU2G,KAAKR,MAAMnG,SACrB4C,oBAAqB+D,KAAKR,MAAMvD,2B,GArBtBgE,IAAMC,WAsCpBC,eACXC,aAZkB,SAAClI,GACnB,MAAO,CACH4D,MAAOnD,EAAST,GAChBW,SAAU6G,EAAYxH,GACtB6D,gBAAiB4D,GAAmBzH,GACpCU,YAAagH,GAAe1H,GAC5B8D,WAAY6D,GAAc3H,GAC1B+D,oBAAqB6D,GAAuB5H,MAKvB,CAAEgB,OLiCT,SAACC,GACnB,8CAAO,WAAOqD,GAAP,SAAAG,EAAA,sDACFJ,EAAmBC,EAAUrD,EAAQT,IAASQ,OAAOmH,KAAK3H,KAAWwD,GADnE,2CAAP,mDAAM,IKlC6B7C,SLuCf,SAACF,GACrB,8CAAO,WAAOqD,GAAP,SAAAG,EAAA,sDACFJ,EAAmBC,EAAUrD,EAAQT,IAASW,SAASgH,KAAK3H,KAAWyD,GADrE,2CAAP,mDAAM,IKxCuCC,iBAAgBE,0BAAyB3D,SLa9D,SAAC2H,EAAMzH,GAC/B,8CAAO,WAAO2D,GAAP,eAAAG,EAAA,6DACHH,EAASJ,EAAekE,IACxB9D,EAASH,GAAiB,IAFvB,SAGc3D,IAASC,SAAS2H,EAAMzH,GAHtC,OAGCI,EAHD,OAIHuD,EAASH,GAAiB,IAC1BG,EAjB4B,CAACxE,KAvDnB,YAuDoC8D,MAiB5B7C,EAAKuC,QACvBgB,EAhBgD,CAACxE,KAvD3B,wBAuDwD+E,MAgBlD9D,EAAKsH,aAN9B,2CAAP,mDAAM,MKfKJ,CAEbJ,I,oBC3CaS,GAZA,SAAChB,GACZ,OAAO,4BAAQ1E,UAAWF,KAAE6F,QACxB,yBAAM3B,IAAI,4FACV,yBAAKhE,UAAWF,KAAE8F,YACZlB,EAAMmB,OACF,6BAAMnB,EAAMvF,MAAZ,MAAqB,4BAAQkE,QAASqB,EAAMnF,QAAvB,WAArB,KACA,kBAAC,IAAD,CAASY,GAAI,UAAb,Y,SCLdzD,GAAe,CACf2B,OAAQ,KACRe,MAAO,KACPD,MAAO,KACP0G,QAAQ,GAcCC,GAAkB,SAACzH,EAAQe,EAAOD,EAAO0G,GAAvB,MAAmC,CAC9D3I,KArBkB,gBAqBG6I,QACjB,CAAC1H,SAAQe,QAAOD,QAAO0G,YAElBG,GAAkB,yDAAM,WAAOtE,GAAP,uBAAAG,EAAA,sEACZ5C,IAAQC,KADI,OAEA,KAD7BhB,EAD6B,QAEpBC,KAAK2D,aAAmB,EACR5D,EAASC,KAAKA,KAAlCvB,EAD2B,EAC3BA,GAAIuC,EADuB,EACvBA,MAAOC,EADgB,EAChBA,MAChBsC,EAASoE,GAAgBlJ,EAAIwC,EAAOD,GAAO,KAJd,2CAAN,uDAwBhB8G,GAvCK,WAAmC,IAAlC7I,EAAiC,uDAAzBV,GAAcW,EAAW,uCAClD,MAVkB,kBAUdA,EAAOH,KACA,eACAE,EADP,GAEOC,EAAO0I,SAGP3I,GCbT8I,G,iLAGE,OAAO,kBAAC,GAAWhB,KAAKR,W,GAHFS,IAAMC,WAWrBE,gBALS,SAAClI,GAAD,MAAY,CAChCyI,OAAQzI,EAAM+I,KAAKN,OACnB1G,MAAO/B,EAAM+I,KAAKhH,SAGkB,CAACI,OD2BnB,yDAAM,WAAOmC,GAAP,SAAAG,EAAA,sEACH5C,IAAQM,SADL,OAES,IAFT,OAEXpB,KAAK2D,YACdJ,EAASoE,GAAgB,KAAM,KAAM,MAAM,IAHvB,2CAAN,wDC3BPR,CAAmCY,I,gDCW5CE,GAAiBC,aAAU,CAACC,KAAM,SAAjBD,EAlBL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,MAC9B,OACI,0BAAMC,SAAUF,GACXG,aAAY,QAAS,QAAS,CAACC,MAAWC,MAC1CF,aAAY,WAAY,WAAY,CAACC,MAAWC,KAAO,CAAC1J,KAAM,aAC9DwJ,aAAY,KAAM,aAAc,GAAIE,KAAO,CAAC1J,KAAM,YAAa,eAE/DsJ,GAAS,yBAAKxG,UAAWmD,KAAO0D,kBAC5BL,GAEL,6BACI,8CA2BDlB,gBAJS,SAAClI,GAAD,MAAY,CAChCyI,OAAQzI,EAAM+I,KAAKN,UAGiB,CAAC1G,MFdpB,SAACC,EAAOC,EAAUC,GAAlB,8CAAiC,WAAOoC,GAAP,iBAAAG,EAAA,sEAC7B5C,IAAQE,MAAMC,EAAOC,EAAUC,GADF,OAEjB,KAD7BpB,EAD8C,QAErCC,KAAK2D,WACdJ,EAASsE,OAELjJ,EAAUmB,EAASC,KAAKrB,SAASgK,OAAS,EAAI5I,EAASC,KAAKrB,SAAS,GAAK,aAC9E4E,EAASqF,aAAW,QAAS,CAACC,OAAQjK,MANQ,2CAAjC,wDEcNuI,EAlBD,SAACZ,GAIX,OAAIA,EAAMmB,OACC,kBAAC,IAAD,CAAU1F,GAAI,aAElB,6BACH,qCACA,kBAACiG,GAAD,CAAgBK,SARH,SAACQ,GACdvC,EAAMvF,MAAM8H,EAAS7H,MAAO6H,EAAS5H,SAAU4H,EAAS3H,mBC5B5D5C,GAAe,CACfwK,aAAa,GAyBFC,GAtBI,WAAmC,IAAlC/J,EAAiC,uDAAzBV,GAAcW,EAAW,uCACjD,OAAQA,EAAOH,MACX,IARqB,sBASjB,OAAO,eACAE,EADP,CAEI8J,aAAa,IAErB,QACI,OAAO9J,ICffV,GAAe,GASJ0K,GAPQ,WAAmC,IAAlChK,EAAiC,uDAAzBV,GAAyB,iCAIrD,OAAOU,G,uCCGPiK,GAAWC,YAAgB,CAC3BC,YAAaC,KACbC,YAAatK,KACbuK,QAASN,GACTzC,UAAW5C,EACXoE,KAAMF,GACN0B,IAAKR,GACLb,KAAMsB,OAeV,IAAMC,GAAmBpI,OAAOqI,sCAAwCzC,IAClE0C,GAAQC,YAAYX,GAAWQ,GAAkBI,aAbvD,SAAiBF,GACb,OAAO,SAAkCG,GACrC,OAAO,SAAwB7K,GAC3BqB,QAAQmB,IAAI,cAAexC,GAC3B,IAAI8K,EAASD,EAAK7K,GAElB,OADAqB,QAAQmB,IAAI,aAAckI,EAAMK,YACzBD,MAO4DE,QAE/E5I,OAAO6I,UAAYP,GACJA,UClCFQ,GAAe,SAACnD,GACzB,OAAO,SAACV,GACJ,OAAO,kBAAC,IAAM8D,SAAP,CAAgBC,SAAW,4CAC9B,kBAACrD,EAAcV,MCarBgE,GAAmBvD,IAAMwD,MAAK,kBAAM,iCACpCC,GAAmBzD,IAAMwD,MAAK,kBAAM,iCAEpCE,G,4LAEE3D,KAAKR,MAAMoE,kB,+BAGX,OAAK5D,KAAKR,MAAMwC,YAIZ,yBAAKlH,UAAU,eACX,kBAAC,GAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAW,uBACZ,kBAAC,IAAD,CAAO+I,KAAK,WACLC,OAAST,GAAaG,MAC7B,kBAAC,IAAD,CAAOK,KAAK,oBACLC,OAAST,GAAaK,MAC7B,kBAAC,IAAD,CAAOK,OAAK,EAACF,KAAK,SAASC,OAAQ,kBAAM,kBAAC,GAAD,SAEzC,kBAAC,IAAD,CAAOC,OAAK,EAACF,KAAK,SAASC,OAAQ,kBAAM,kBAAC,GAAD,SAGzC,kBAAC,IAAD,CAAOC,OAAK,EAACF,KAAK,QAAQC,OAAQ,kBAAM,kBAAC,EAAD,SACxC,kBAAC,IAAD,CAAOC,OAAK,EAACF,KAAK,SAASC,OAAQ,kBAAM,kBAAC,EAAD,SACzC,kBAAC,IAAD,CAAOC,OAAK,EAACF,KAAK,YAAYC,OAAQ,kBAAM,kBAAC,EAAD,WAlB7C,kBAAC,IAAD,U,GAND5D,aAmCZ8D,GAAe7D,YACjB8D,IACA7D,aANoB,SAAClI,GAAD,MAAY,CAChC8J,YAAa9J,EAAMuK,IAAIT,eAKE,CAAC4B,cJpCD,kBAAM,SAACpH,GACfA,EAASsE,MACd/H,MAAK,WACTyD,EAL6B,CAACxE,KAlBb,+BIsDRmI,CAE0BwD,IAShCO,GAPO,SAAC1E,GACpB,OAAO,kBAAC,IAAD,CAAe2E,SAAUC,gBAC3B,kBAAC,IAAD,CAAUvB,MAAOA,IACb,kBAACmB,GAAD,SCzDZK,IAASP,OAAO,kBAAC,GAAD,MAAiBQ,SAASC,eAAe,SrB2HnD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3L,MAAK,SAAA4L,GACjCA,EAAaC,iB,2LsB/HbC,EAAc,SAAC,GAAgD,EAA/CC,MAAgD,IAAD,IAAxCC,KAAOC,EAAiC,EAAjCA,QAAU1D,EAAuB,EAAvBA,MAAS2D,EAAc,EAAdA,SAC7CC,EAAWF,GAAW1D,EAC5B,OACI,yBAAKxG,UAAWmD,IAAOkH,YAAc,KAAOD,EAAWjH,IAAOqD,MAAQ,KAClE,6BACK2D,GAEJC,GAAY,8BAAO5D,KAKnB8D,EAAW,SAAC5F,GAAW,IACzBsF,EAAoCtF,EAApCsF,MAAuBO,GAAa7F,EAA7BuF,KAA6BvF,EAAvB8F,MADW,YACY9F,EADZ,2BAE/B,OAAO,kBAACqF,EAAgBrF,EAAO,8CAAcsF,EAAWO,MAG/C3D,EAAQ,SAAClC,GAAW,IACtBsF,EAAoCtF,EAApCsF,MAAuBO,GAAa7F,EAA7BuF,KAA6BvF,EAAvB8F,MADQ,YACe9F,EADf,2BAE5B,OAAO,kBAACqF,EAAgBrF,EAAO,2CAAWsF,EAAWO,MAG5C7D,EAAc,SAAC+D,EAAa5N,EAAM6N,EAAYC,GAAhC,IAA2CjG,EAA3C,uDAAmD,GAAIkG,EAAvD,uDAA8D,GAA9D,OACvB,6BACI,kBAAC,IAAD,eAAOH,YAAaA,EAAa5N,KAAMA,EAChC8N,UAAWA,EACXE,SAAUH,GACNhG,IAJf,IAKQkG,K,mBC/BZpO,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,gCCD3H,sCAQeqO,IALC,SAACpG,GACb,OAAQ,6BACJ,yBAAMqG,MAAO,QAASC,IAAK,YAAahH,IAAKiH,S,mBCJrDzO,EAAOC,QAAU,CAAC,UAAY,6BAA6B,aAAe,gCAAgC,WAAa,gC,gCCCvH,oEAAO,IAAMkK,EAAW,SAAAuE,GACpB,IAAIA,EACJ,MAAO,qBAIEC,EAAkB,SAACC,GAAD,OAAe,SAACF,GAC3C,GAAIA,EAAMpE,OAASsE,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,mBCRlC5O,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,6B,2NCM3DC,EAAe,CACf2O,MAAO,CACH,CAACzO,GAAI,EAAGG,QAAS,oBAAqBuO,WAAY,GAClD,CAAC1O,GAAI,EAAGG,QAAS,sBAAwBuO,WAAY,IACrD,CAAC1O,GAAI,EAAGG,QAAS,uBAAyBuO,WAAY,GACtD,CAAC1O,GAAI,EAAGG,QAAS,oBAAqBuO,WAAY,KAEtDC,QAAS,KACTxM,OAAQ,IA2BCyM,EAAuB,SAACC,GAAD,MAAkB,CAACvO,KAxCtC,WAwCsDuO,gBAE1DC,EAAY,SAAC3M,GAAD,MAAa,CAAC7B,KAxCpB,aAwCsC6B,WAE5C4M,EAAiB,SAACtN,GAAD,8CAAY,WAAOqD,GAAP,eAAAG,EAAA,sEACjBjE,IAASa,WAAWJ,GADH,OAClCH,EADkC,OAEtCwD,EALwC,CAACxE,KAxCpB,mBAwC4CqO,QAKzCrN,EAASC,OAFK,2CAAZ,uDAIjBU,EAAY,SAACR,GAAD,8CAAY,WAAOqD,GAAP,eAAAG,EAAA,sEACZjD,IAAWC,UAAUR,GADT,OAC7BH,EAD6B,OAEjCwD,EAASgK,EAAUxN,EAASC,OAFK,2CAAZ,uDAIZW,EAAe,SAACC,GAAD,8CAAY,WAAO2C,GAAP,SAAAG,EAAA,sEACfjD,IAAWE,aAAaC,GADT,OAEH,IAFG,OAEvBZ,KAAK2D,YACdJ,EAASgK,EAAU3M,IAHa,2CAAZ,uDAMbyI,IA1CQ,WAAmC,IAAlCpK,EAAiC,uDAAzBV,EAAcW,EAAW,uCAErD,OAAQA,EAAOH,MACX,IAnBS,WAoBL,IAAI0O,EAAU,CACVhP,GAAI,EACJG,QAASM,EAAOoO,YAChBH,WAAY,GAEhB,OAAO,eACAlO,EADP,CAEIiO,MAAM,GAAD,mBAAMjO,EAAMiO,OAAZ,CAAmBO,IACxBH,YAAa,KAErB,IA5BW,aA6BP,OAAO,eAAIrO,EAAX,CAAkB2B,OAAQ1B,EAAO0B,SAErC,IAhCiB,mBAiCb,OAAO,eAAI3B,EAAX,CAAkBmO,QAASlO,EAAOkO,UAEtC,QACI,OAAOnO,M","file":"static/js/main.59fab2df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3INc9\",\"item\":\"Navbar_item__3j1Uu\",\"active\":\"Navbar_active__1G8Cz\"};","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: ' Dimych'},\r\n        {id: 2, name: ' Andrey'},\r\n        {id: 3, name: ' Sveta'},\r\n        {id: 4, name: ' Sasha'},\r\n        {id: 5, name: ' Vikror'},\r\n        {id: 6, name: ' Valeriy'}\r\n    ],\r\n\r\n    messages: [\r\n        {id: 1, message: ' Hi'},\r\n        {id: 2, message: ' How are you?'},\r\n        {id: 3, message: ' Yo man'},\r\n        {id: 4, message: ' Yo man'},\r\n        {id: 5, message: ' Yo man'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/user.6f99ea57.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.61f50255.gif\";","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"bd453261-e1dc-4bfe-a7fb-dbbece8ad25b\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.');\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n};\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get('profile/' + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get('profile/status/' + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('profile/status/', {status: status})\r\n    }\r\n\r\n};\r\n\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`/auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`/auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`/auth/login`);\r\n    }\r\n};\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_list\":\"Users_content_list__2u1WM\",\"userPhoto\":\"Users_userPhoto__2ZI39\",\"selectedPage\":\"Users_selectedPage__1vEkq\",\"content_block\":\"Users_content_block__YsZwJ\",\"content_flex\":\"Users_content_flex__3KWZb\",\"follow_button\":\"Users_follow_button__15msf\",\"content_user_name\":\"Users_content_user_name__2pAzG\",\"content_location\":\"Users_content_location__2AgcN\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nconsole.log(s);\r\n\r\nconst Navbar = () => {\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink  to ='/profile' activeClassName={s.active}>Profile</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to ='/dialogs' activeClassName={s.active}>Messages</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to ='/users' activeClassName={s.active}>Users</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to ='/news' activeClassName={s.active}>News</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to ='/settings' activeClassName={s.active}>Settings</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to ='/login' activeClassName={s.active}>Login</NavLink>\r\n        </div>\r\n    </nav>\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './news.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default News;","import React from 'react';\r\nimport s from './music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Settings;","export const updateObjectInArray = (items, itemID, objPropName, newObjectProps) => {\r\n   return  items.map(u => {\r\n        if (u[objPropName] === itemID) {\r\n            return {...u, ...newObjectProps}\r\n        }\r\n        return u;\r\n    })\r\n};","import {usersAPI} from \"../API/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW :\r\n            return {\r\n                ...state,\r\n                     users: updateObjectInArray( state.users, action.userId, \"id\", {followed: true})\r\n            };\r\n        case UNFOLLOW :\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray( state.users, action.userId, \"id\", {followed: false})\r\n            };\r\n        case SET_USERS : {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT : {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n\r\n        case SET_CURRENT_PAGE : {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case TOGGLE_IS_FETCHING : {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS : {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(setCurrentPage(page));\r\n        dispatch(toggleIsFetching(true));\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n};\r\n\r\nconst followUnfollowFlow = async(dispatch, userId, apiMethod, actionCreator ) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        let response = await apiMethod(userId);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(actionCreator(userId));\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId));\r\n};\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n         followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n         followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n};\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\nimport styles from \"./Paginator.module.css\";\nimport cn from \"classnames\";\n\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n    return <div className={styles.paginator}>\n        {portionNumber > 1 &&  <button onClick={() => { setPortionNumber(portionNumber - 1)}}> Previous </button>}\n        {pages\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\n            .map((p) => {\n                return <span className={ cn({\n                    [styles.selectedPage]: currentPage === p\n                }, styles.pageNumber) }\n                             key={p}\n                             onClick={(e) => {\n                                 onPageChanged(p);\n                             }}>{p}</span>\n            })}\n        {portionCount > portionNumber && <button onClick={() => {setPortionNumber(portionNumber + 1)}}> Next </button>}\n    </div>\n\n};\n\nexport default Paginator;","import React from 'react';\nimport styles from \"./Users.module.css\";\nimport userPhoto from \"../../assets/images/user.png\";\nimport {NavLink} from \"react-router-dom\";\n\n\nlet User = ({user, followingInProgress, unfollow, follow}) => {\n    return (\n        <div className={styles.content_block}>\n            <div className={styles.content_flex}>\n                        <span>\n                            <div>\n                                <NavLink to={'/profile/' + user.id}>\n                                <img src={user.photos.small != null ? user.photos.small : userPhoto}\n                                     className={styles.userPhoto}/>\n                                </NavLink>\n                            </div>\n                             <div className={styles.follow_button}>\n                                 {user.followed\n                                     ? <button disabled={followingInProgress\n                                         .some(id => id === user.id)}\n                                               onClick={() => {\n                                                   unfollow(user.id)\n                                               }}>\n                                         Unfollow </button>\n                                     : <button disabled={followingInProgress.some(id => id === user.id)}\n                                               onClick={() => {\n                                                   follow(user.id)\n                                               }}>\n                                         Follow </button>}\n                             </div>\n                        </span>\n                        <span>\n                            <span>\n                                <div className={styles.content_user_name}>{user.name}</div>\n                                <div className={styles.content_user_name}>{user.status}</div>\n                            </span>\n                            <span>\n                                <div className={styles.content_location}>\n                                    <div>{\"u.location.country\"}</div>\n                                    <div>{\"u.location.city\"}</div>\n                                </div>\n                            </span>\n                        </span>\n            </div>\n        </div>)\n};\n\n\nexport default User;","import React from 'react';\nimport Paginator from \"../Paginator/Paginator\";\nimport User from \"./User\";\n\n\nlet Users = ({currentPage, totalUsersCount, pageSize, selectedPage, onPageChanged, users, ...props}) => {\n    return <div>\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\n        <div>\n            {\n                users.map(u => <User user={u}\n                                     followingInProgress={props.followingInProgress}\n                                     key={u.id}\n                                     unfollow={props.unfollow}\n                                     follow={props.follow}\n                />)\n            }\n        </div>\n    </div>\n};\n\n\nexport default Users;","export const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n};\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n};\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,  unfollow, requestUsers,\r\n    setCurrentPage,\r\n    toggleFollowingProgress\r\n} from \"../../Redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../Redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage,pageSize } = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize } = this.props;\r\n        this.props.getUsers(pageNumber,pageSize);\r\n    };\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching && < Preloader/>}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers })\r\n)(UsersContainer)","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img  src='https://i1.pngguru.com/preview/1017/651/666/black-apple-logo-apple-logo-png-clipart.jpg' />\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>\r\n};\r\n\r\n\r\nexport default Header;","import {authAPI} from \"../API/api\";\r\nimport {stopSubmit} from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    if (action.type === SET_USER_DATA) {\r\n        return {\r\n            ...state,\r\n            ...action.payload,\r\n        };\r\n    } else {\r\n        return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        {userId, email, login, isAuth}\r\n});\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n\r\n};\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../Redux/auth-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/formsControl/formsControls\";\r\nimport {required} from \"../../utils/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from \"./../common/formsControl/formsControls.module.css\"\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            {error && <div className={styles.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    };\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst  INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS :\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n       let promise = dispatch(getAuthUserData());\r\n        promise.then(()=> {\r\n            dispatch(initializedSuccess());\r\n        })\r\n};\r\n\r\n\r\nexport default appReducer;","\r\nlet initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n\r\n\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import {combineReducers, createStore, applyMiddleware, compose} from \"redux\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer,\r\n});\r\n\r\nfunction logger (store) {\r\n    return function wrapDispatchToAddLogging(next) {\r\n        return function dispatchAndLog(action) {\r\n            console.log('dispatching', action)\r\n            let result = next(action)\r\n            console.log('next state', store.getState())\r\n            return result\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,  composeEnhancers( applyMiddleware(logger, thunkMiddleware)));\r\n\r\nwindow.__store__ = store;\r\nexport default store;\r\n","import React from \"react\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback= {<div>Loading...</div>}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    };\r\n};\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport News from \"./components/News/news\";\r\nimport Music from \"./components/Music/music\";\r\nimport Settings from \"./components/Settings/settings\";\r\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./Redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/preloader\";\r\nimport store from \"./Redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className={'app-wrapper-content'}>\r\n                    <Route path='/dialogs'\r\n                           render= {withSuspense(DialogsContainer)} />\r\n                    <Route path='/profile/:userId?'\r\n                           render= {withSuspense(ProfileContainer)} />\r\n                    <Route exact path='/users' render={() => <UsersContainer/>}/>\r\n\r\n                    <Route exact path='/login' render={() => <Login/>}/>\r\n\r\n\r\n                    <Route exact path='/news' render={() => <News/>}/>\r\n                    <Route exact path='/music' render={() => <Music/>}/>\r\n                    <Route exact path='/settings' render={() => <Settings/>}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n});\r\n\r\nconst AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\n const SamuraiJsApp = (props) => {\r\n   return <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </BrowserRouter>\r\n};\r\nexport default SamuraiJsApp;","import React from 'react';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ReactDOM from \"react-dom\";\r\nimport SamuraiJsApp from \"./App\";\r\n\r\nReactDOM.render(<SamuraiJsApp/>, document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\nimport styles from \"./formsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched , error }, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               component={component}\r\n               validate={validators}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formsControls_formControl__ywvW-\",\"error\":\"formsControls_error__3bc_4\",\"formSummaryError\":\"formsControls_formSummaryError__yEuYL\"};","import preloader from \"../../../assets/images/preloader.gif\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\n    return  <div>\r\n        < img width={'150px'} alt={'all is ok'} src={preloader} />\r\n    </div>\r\n};\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1wF2h\",\"selectedPage\":\"Paginator_selectedPage__4RhmM\",\"pageNumber\":\"Paginator_pageNumber__COJwv\"};","\r\n\r\nexport const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n};\r\n\r\n\r\nexport const maxLengthCreator= (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1L7Hq\",\"loginBlock\":\"Header_loginBlock__DQNIE\"};","import {profileAPI, usersAPI} from \"../API/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: ' Hi, how are you?', likesCount: 2},\r\n        {id: 2, message: ' It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: ' Don\\'t blame someone', likesCount: 6},\r\n        {id: 4, message: ' No time for wait', likesCount: 23},\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\nexport default profileReducer;"],"sourceRoot":""}